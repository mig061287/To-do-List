{"version":3,"sources":["context/alert/alertContext.js","context/firebase/firebaseContext.js","components/Form.js","components/Notes.js","components/Loader.js","pages/Home.js","pages/About.js","components/Navbar.js","components/Alert.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/firebase/firebaseReducer.js","context/firebase/FirebaseState.js","App.js","reportWebVitals.js","index.js"],"names":["AlertContext","createContext","FirebaseContext","Form","useState","value","setValue","alert","useContext","firebase","onSubmit","event","preventDefault","trim","addNote","then","show","catch","className","type","placeholder","onChange","e","target","Notes","notes","onRemove","TransitionGroup","component","map","note","CSSTransition","classNames","timeout","title","date","onClick","id","Loader","role","Home","loading","fetchNotes","removeNote","useEffect","About","Navbar","to","exact","Alert","hide","in","visible","mountOnEnter","unmountOnExit","text","SHOW_ALERT","HIDE_ALERT","SHOW_LOADER","ADD_NOTE","FETCH_NOTES","REMOVE_NOTE","handlers","state","payload","alertReducer","action","DEFAULT","AlertState","children","useReducer","dispatch","Provider","filter","firebaseReducer","url","process","FirebaseState","showLoader","a","axios","get","res","Object","keys","data","key","Date","toJSON","post","name","Error","message","delete","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11334880.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const AlertContext = createContext()","import {createContext} from 'react';\r\n\r\nexport const FirebaseContext = createContext()","import React, {useState, useContext} from 'react';\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\nimport {FirebaseContext} from \"../context/firebase/firebaseContext\";\r\n\r\nexport const Form = () => {\r\n    const [value, setValue] = useState('')\r\n    const alert = useContext(AlertContext)\r\n    const firebase = useContext(FirebaseContext)\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault()\r\n\r\n        if (value.trim()) {\r\n            firebase.addNote(value.trim()).then(() => {\r\n                alert.show('Заметка была создана', 'success')\r\n            }).catch(() => {\r\n                alert.show('Что-то не так', 'danger')\r\n            })\r\n\r\n            setValue('')\r\n        } else {\r\n            alert.show ('Введите заметку')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Новая заметка\"\r\n                value={value} onChange={e => setValue(e.target.value)}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from 'react';\r\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\r\n\r\nexport const Notes = ({notes, onRemove}) => {\r\n    return (\r\n        <TransitionGroup component=\"ul\" className=\"list-group\">\r\n            {notes.map(note => (\r\n                <CSSTransition\r\n                    key={note.id}\r\n                    classNames={'note'}\r\n                    timeout={800}\r\n                >\r\n                    <li className=\"list-group-item note\">\r\n\r\n                        <div>\r\n                            <strong>{note.title}</strong>\r\n                            <small>{note.date}</small>\r\n                        </div>\r\n\r\n                        <button type=\"button\" className=\"btn-outline-primary btn-sm\"\r\n                                onClick={() => onRemove(note.id)}>\r\n                            &times;\r\n                        </button>\r\n                    </li>\r\n                </CSSTransition>\r\n\r\n            ))}\r\n\r\n        </TransitionGroup>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Loader = () => (\r\n    <div className=\"text-center\">\r\n        <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </div>\r\n)","import React, {Fragment, useContext, useEffect} from 'react';\r\nimport {Form} from \"../components/Form\";\r\nimport {Notes} from \"../components/Notes\";\r\nimport {FirebaseContext} from \"../context/firebase/firebaseContext\";\r\nimport {Loader} from \"../components/Loader\";\r\n\r\nexport const Home = () => {\r\n   const {loading, notes, fetchNotes, removeNote} = useContext(FirebaseContext)\r\n\r\n    useEffect( () => {\r\n        fetchNotes()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n           <Form/>\r\n\r\n           <hr/>\r\n\r\n            {loading\r\n            ? <Loader />\r\n            : <Notes notes={notes} onRemove={removeNote}/>\r\n            }\r\n\r\n        </Fragment>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-3\">\r\n                    To-do List <p className=\"display-5\">React приложение!</p>\r\n                </h1>\r\n                <p className=\"lead\">\r\n                    Версия <strong>1.7.1</strong>\r\n                </p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Navbar = () => (\r\n    <nav className=\"navbar navbar-dark navbar-expand-lg bg-primary\">\r\n        <div className=\"navbar-brand\">\r\n            To-do List\r\n        </div>\r\n        <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/\" exact>\r\n                    Главная\r\n                </NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink className=\"nav-link\" to=\"/about\">\r\n                    Инфа\r\n                </NavLink>\r\n            </li>\r\n\r\n        </ul>\r\n    </nav>\r\n)","import React, {useContext} from 'react';\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\n\r\nexport const Alert = () => {\r\n    const {alert, hide} = useContext(AlertContext)\r\n\r\n    return (\r\n        <CSSTransition\r\n        in={alert.visible}\r\n        timeout={750}\r\n        classNames={'alert'}\r\n        mountOnEnter\r\n        unmountOnExit>\r\n            <div className={`alert alert-${alert.type || 'warning'} alert-dismissible`}>\r\n                <strong>Внимание!</strong>\r\n                &nbsp;{alert.text}\r\n                <button onClick={hide} type=\"button\" className=\"close\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n    )\r\n}","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\nexport const SHOW_LOADER = 'SHOW_LOADER'\r\nexport const ADD_NOTE = 'ADD_NOTE'\r\nexport const FETCH_NOTES = 'FETCH_NOTES'\r\nexport const REMOVE_NOTE = 'REMOVE_NOTE'\r\n","import {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT]: (state, {payload}) => ({...payload, visible: true}),\r\n    [HIDE_ALERT]: state => ({...state, visible: false}),\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const alertReducer = (state, action) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT\r\n    return handle(state, action)\r\n}","import React, {useReducer} from 'react';\r\nimport {AlertContext} from \"./alertContext\";\r\nimport {alertReducer} from \"./alertReducer\";\r\nimport {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\n\r\nexport const AlertState = ({children}) => {\r\n    const [state, dispatch] = useReducer(alertReducer, {visible: false})\r\n\r\n    const show = (text, type = 'warning') => {\r\n        dispatch ({\r\n            type: SHOW_ALERT,\r\n            payload: {text, type}\r\n        })\r\n    }\r\n    const hide = () => dispatch({type: HIDE_ALERT})\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            show, hide,\r\n            alert: state\r\n        }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}","import {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER} from \"../types\";\r\n\r\nconst handlers = {\r\n    [SHOW_LOADER]: state => ({...state, loading: true}),\r\n    [ADD_NOTE]: (state, {payload}) => ({\r\n        ...state,\r\n        notes: [...state.notes, payload]\r\n    }),\r\n    [FETCH_NOTES]: (state, {payload}) => ({...state, notes: payload, loading: false}),\r\n    [REMOVE_NOTE]: (state, {payload}) => ({\r\n        ...state,\r\n        notes: state.notes.filter(note=> note.id !== payload)\r\n    }),\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const firebaseReducer = (state, action) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT\r\n    return handle(state, action)\r\n}","import React, {useReducer} from 'react';\r\nimport {FirebaseContext} from \"./firebaseContext\";\r\nimport {firebaseReducer} from \"./firebaseReducer\";\r\nimport {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER} from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nconst url = process.env.REACT_APP_DB_URL;\r\n\r\nexport const FirebaseState = ({children}) => {\r\n    const initialState = {\r\n        notes: [],\r\n        loading: false\r\n    }\r\n    const [state, dispatch] = useReducer(firebaseReducer, initialState)\r\n\r\n    const showLoader = () => dispatch({type: SHOW_LOADER})\r\n\r\n    const fetchNotes = async () => {\r\n        showLoader()\r\n        const res = await axios.get(`${url}/notes.json`)\r\n\r\n       const payload = Object.keys(res.data).map(key => {\r\n           return {\r\n               ...res.data[key],\r\n               id: key\r\n           }\r\n       })\r\n\r\n        dispatch({\r\n            type: FETCH_NOTES, payload\r\n        })\r\n    }\r\n\r\n    const addNote = async title => {\r\n        const note = {\r\n            title, date: new Date().toJSON()\r\n        }\r\n        try {\r\n            const res = await axios.post(`${url}/notes.json`, note)\r\n            const payload = {\r\n                ...note,\r\n                id: res.data.name\r\n            }\r\n\r\n            dispatch({\r\n                type: ADD_NOTE,\r\n                payload\r\n            })\r\n\r\n        } catch (e) {\r\n            throw new Error(e.message)\r\n        }\r\n    }\r\n\r\n    const removeNote = async id => {\r\n        await axios.delete(`${url}/notes/${id}.json`)\r\n\r\n        dispatch({\r\n            type: REMOVE_NOTE,\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    return (\r\n        <FirebaseContext.Provider value={{\r\n            showLoader, addNote, removeNote, fetchNotes,\r\n            loading: state.loading,\r\n            notes: state.notes\r\n        }}>\r\n            {children}\r\n        </FirebaseContext.Provider>\r\n    )\r\n}","import React from 'react';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport {Home} from \"./pages/Home\";\nimport {About} from \"./pages/About\";\nimport {Navbar} from \"./components/Navbar\";\nimport {Alert} from \"./components/Alert\";\nimport {AlertState} from \"./context/alert/AlertState\";\nimport {FirebaseState} from \"./context/firebase/FirebaseState\";\n\nfunction App() {\n    return (\n        <FirebaseState>\n            <AlertState>\n                <BrowserRouter>\n                    <Navbar/>\n                    <div className=\"container pt-4\">\n                        <Alert/>\n                        <Switch>\n                            <Route path={'/'} exact component={Home}/>\n                            <Route path={'/about'} component={About}/>\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </AlertState>\n        </FirebaseState>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}